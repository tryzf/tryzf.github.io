<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: javscript | Blog Like a Hacker]]></title>
  <link href="http://tryzf.github.io/blog/categories/javscript/atom.xml" rel="self"/>
  <link href="http://tryzf.github.io/"/>
  <updated>2016-02-26T22:59:20+08:00</updated>
  <id>http://tryzf.github.io/</id>
  <author>
    <name><![CDATA[tryzf]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[2016_2_26]]></title>
    <link href="http://tryzf.github.io/blog/2016/02/26/dddd/"/>
    <updated>2016-02-26T19:17:25+08:00</updated>
    <id>http://tryzf.github.io/blog/2016/02/26/dddd</id>
    <content type="html"><![CDATA[<h1>用构建模块化开发摒弃全局变量的使用</h1>

<blockquote><p>JavaScript语言精粹</p></blockquote>

<h6>##语言精粹一书中在讲<code>Module</code>的时候提到：通过使用函数和闭包来构建模块，几乎可以完全摒弃全局变量的使用。</h6>

<h4>什么是模块呢？</h4>

<h6>#模块：是一个提供接口却隐藏状态与实现的函数或对象。</h6>

<ul>
<li><p>模块模式一般形式是：一个定义了私有变量和函数的函数，就是所提到的闭包。（<code>闭包：我简单的认为就是一个函数包着一个函数的函数，说的有点拗口</code>）。</p></li>
<li><p>利用闭包创建可以访问私有变量和函数的特权函数，（<code>这里说到的特权应该是指可以访问函数内部的变量</code>）</p></li>
</ul>

]]></content>
  </entry>
  
</feed>
